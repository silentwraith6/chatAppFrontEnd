{"version":3,"sources":["Components/chat.js","Components/join.js","App.js","index.js"],"names":["Chat","props","removeFabOnScroll","chat","document","getElementById","Math","ceil","scrollTop","offsetHeight","scrollHeight","setState","showFab","unreadCount","sessionStorage","setItem","JSON","stringify","state","onOfflineEventListener","status","onOnlineEventListener","socket","emit","messages","length","id","roomName","missedMsgs","alert","map","msgObject","addMessage","window","location","reload","autoScrolling","newMessage","lastElementChild","newMessageStyles","getComputedStyle","newMessageMargin","parseInt","marginBottom","newMessageHeight","visibleHeight","containerHeight","scrollOffset","floor","unreadAdminMsg","updatedMsgs","filter","el","message","senderName","scrollTo","top","behavior","splice","scrollToBottom","userJoinTemp","userName","msg","getItem","parse","userJoined","error","addEventListener","this","on","callback","recOnClientAt","Date","getTime","removeEventListener","classes","theme","Paper","className","rootCont","Card","style","height","backgroundColor","Typography","color","fontSize","fontFamily","marginLeft","display","alignItems","msgDisplay","bottom","width","overflow","List","ListItem","ownMessage","adminMessage","otherMessage","maxWidth","fontWeight","lineHeight","wordWrap","textAlign","moment","createdAt","format","Fab","fabVisible","fabHidden","size","onClick","Badge","badgeContent","minWidth","TextField","inputRoot","InputProps","inputInput","margin","variant","required","label","autoFocus","Button","type","verticalAlign","e","preventDefault","value","sentFromClientAt","text","console","log","to","Component","withStyles","boxShadow","overflowY","position","marginRight","borderRadius","right","float","clear","borderTopRightRadius","borderTopLeftRadius","padding","opacity","withTheme","Join","stye","marginTop","varient","fullWidth","trim","history","push","pathname","paddingTop","paddingBottom","io","App","href","exact","path","render","from","ReactDOM"],"mappings":"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","file":"static/js/main.484ba05c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Card,\r\n  Fab,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport ExpandMoreRoundedIcon from \"@material-ui/icons/ExpandMoreRounded\";\r\n\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0 auto\",\r\n    boxShadow: \"none\",\r\n    backgroundColor: \"#5A5890\",\r\n    height: \"100%\",\r\n  },\r\n  msgDisplay: {\r\n    minWidth: \"300px\",\r\n    height: \"77%\",\r\n    margin: \"0 auto\",\r\n    overflowY: \"hidden\",\r\n    // \"&:hover\": {\r\n    //   overflowY: \"scroll\",\r\n    // },\r\n    position: \"relative\",\r\n    backgroundColor: \"#ebebfc\",\r\n  },\r\n  ownMessage: {\r\n    marginRight: \"12px\",\r\n    backgroundColor: \"#514f82\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    right: \"0\",\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    borderTopRightRadius: \"0px\",\r\n  },\r\n  otherMessage: {\r\n    marginLeft: \"12px\",\r\n    backgroundColor: \"#5511a8\",\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    borderTopLeftRadius: \"0px\",\r\n  },\r\n  adminMessage: {\r\n    width: \"fit-content\",\r\n    maxWidth: \"275px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#8684b5\",\r\n    margin: \"5px auto\",\r\n    padding: \"0px 6px\",\r\n    opacity: \"0.8\",\r\n    borderRadius: \"8px\",\r\n    clear: \"both\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n  fabVisible: {\r\n    backgroundColor: \"#8684b5\",\r\n    opacity: \"0.8\",\r\n    bottom: \"20px\",\r\n    right: \"60px\",\r\n    position: \"absolute\",\r\n  },\r\n  fabHidden: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let userJoinTemp = false;\r\n    if (\r\n      this.props.location.state &&\r\n      this.props.location.state.userName &&\r\n      this.props.location.state.roomName &&\r\n      this.props.location.state.msg\r\n    ) {\r\n      userJoinTemp = true;\r\n    }\r\n\r\n    this.state = sessionStorage.getItem(\"state\")\r\n      ? JSON.parse(sessionStorage.getItem(\"state\"))\r\n      : {\r\n          userName: userJoinTemp ? this.props.location.state.userName : \"\",\r\n          messages: userJoinTemp ? [this.props.location.state.msg] : [],\r\n          roomName: userJoinTemp ? this.props.location.state.roomName : \"\",\r\n          userJoined: userJoinTemp,\r\n          status: null,\r\n          showFab: false,\r\n          unreadCount: 0,\r\n          unreadAdminMsg: false,\r\n        };\r\n    this.props.socket.emit(\r\n      \"join\",\r\n      { userName: this.state.userName, roomName: this.state.roomName },\r\n      (error) => {\r\n        if (error) return;\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const chat = document.getElementById(\"chatList\");\r\n    chat.scrollTop = chat.scrollHeight;\r\n    chat.addEventListener(\"scroll\", this.removeFabOnScroll);\r\n\r\n    this.props.socket.on(\"serverToClientMessage\", (msgObject, callback) => {\r\n      msgObject.recOnClientAt = new Date().getTime();\r\n      msgObject.status = \"recOnClient\";\r\n      this.addMessage(msgObject);\r\n    });\r\n\r\n    window.addEventListener(\"offline\", this.onOfflineEventListener);\r\n    window.addEventListener(\"online\", () => this.onOnlineEventListener);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"online\", this.onOnlineEventListener);\r\n    window.removeEventListener(\"offline\", this.onOfflineEventListener);\r\n    document\r\n      .getElementById(\"chatList\")\r\n      .removeEventListener(\"scroll\", this.removeFabOnScroll);\r\n    this.setState({      \r\n          status: null,\r\n          showFab: false,\r\n          unreadCount: 0,\r\n          unreadAdminMsg: false,\r\n    })\r\n    sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n  }\r\n  removeFabOnScroll = () => {\r\n    const chat = document.getElementById(\"chatList\");\r\n    if (\r\n      Math.ceil(chat.scrollTop + chat.offsetHeight) >=\r\n      0.99 * chat.scrollHeight\r\n    ) {\r\n      this.setState({ showFab: false, unreadCount: 0 });\r\n      sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    }\r\n  };\r\n  onOfflineEventListener = () => {\r\n    this.setState({ status: \"disconnected\" });\r\n    sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n  };\r\n\r\n  onOnlineEventListener = () => {\r\n    this.setState({ status: \"connected\" });\r\n    sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    this.props.socket.emit(\r\n      \"updateMessages\",\r\n      this.state.messages[this.state.messages.length - 1].id,\r\n      this.state.roomName,\r\n      (missedMsgs) => {\r\n        alert(\"missed \" + missedMsgs.length);\r\n        missedMsgs.map((msgObject) => {\r\n          this.addMessage(msgObject);\r\n        });\r\n        window.location.reload(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  autoScrolling = () => {\r\n    const newMessage = document.getElementById(\"msgList\").lastElementChild;\r\n\r\n    const newMessageStyles = getComputedStyle(newMessage);\r\n    const newMessageMargin = parseInt(newMessageStyles.marginBottom);\r\n    const newMessageHeight = newMessage.offsetHeight + newMessageMargin;\r\n\r\n    const chat = document.getElementById(\"chatList\");\r\n    const visibleHeight = chat.offsetHeight;\r\n\r\n    const containerHeight = chat.scrollHeight;\r\n\r\n    const scrollOffset = chat.scrollTop + visibleHeight;\r\n\r\n    if (\r\n      Math.floor(0.99 * (containerHeight - newMessageHeight)) <=\r\n      Math.ceil(scrollOffset)\r\n    ) {\r\n      if (this.state.unreadAdminMsg) {\r\n        let updatedMsgs = this.state.messages;\r\n        updatedMsgs = updatedMsgs.filter((el) => {\r\n          return el.message !== \"Unread Messages\" && el.senderName !== \"admin\";\r\n        });\r\n        this.setState({\r\n          messages: updatedMsgs,\r\n          unreadAdminMsg: false,\r\n        });\r\n        sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n      }\r\n\r\n      chat.scrollTo({ top: chat.scrollHeight, behavior: \"smooth\" });\r\n    } else {\r\n      if (this.state.unreadCount === 0) {\r\n        let updatedMsgs = this.state.messages;\r\n        updatedMsgs.splice(updatedMsgs.length - 1, 0, {\r\n          message: \"Unread Messages\",\r\n          senderName: \"admin\",\r\n        });\r\n        this.setState({\r\n          messages: updatedMsgs,\r\n          unreadAdminMsg: true,\r\n        });\r\n        sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n      }\r\n      this.setState({\r\n        showFab: true,\r\n        unreadCount: this.state.unreadCount + 1,\r\n      });\r\n      sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    }\r\n  };\r\n  scrollToBottom = () => {\r\n    const chat = document.getElementById(\"chatList\");\r\n    chat.scrollTo({ top: chat.scrollHeight, behavior: \"smooth\" });\r\n  };\r\n\r\n  addMessage = (msgObject) => {\r\n    this.setState({\r\n      messages: [...this.state.messages, msgObject],\r\n    });\r\n    sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    this.autoScrolling();\r\n  };\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    let displayList;\r\n    if (!this.state.userJoined) {\r\n      return (\r\n        <div>\r\n          {alert(\"You need to join a room first\")}\r\n          <Redirect to=\"/join\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Paper className={classes.rootCont}>\r\n        <Card style={{ height: \"11%\", backgroundColor: \"#5A5890\" }}>\r\n          <Typography\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"22px\",\r\n              fontFamily: \"cursive\",\r\n              marginLeft: \"10px\",\r\n              display: \"flex\",\r\n              height: \"100%\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            Room Name : {this.state.roomName}\r\n            <br />\r\n            Participant Name : {this.state.userName}\r\n          </Typography>\r\n        </Card>\r\n        <Paper className={classes.msgDisplay} style={{}}>\r\n          <div\r\n            id=\"chatList\"\r\n            style={{\r\n              bottom: \"0\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <List id=\"msgList\">\r\n              {this.state.messages.map((el) => (\r\n                <ListItem\r\n                  className={\r\n                    el.senderName === this.state.userName\r\n                      ? classes.ownMessage\r\n                      : el.senderName === \"admin\"\r\n                      ? classes.adminMessage\r\n                      : classes.otherMessage\r\n                  }\r\n                >\r\n                  <div style={{ maxWidth: \"243px\" }}>\r\n                    {el.senderName !== this.state.userName &&\r\n                    el.senderName !== \"admin\" ? (\r\n                      <div\r\n                        style={{\r\n                          color: \"orange\",\r\n                          fontSize: \"15px\",\r\n                        }}\r\n                      >\r\n                        {el.senderName}\r\n                      </div>\r\n                    ) : null}\r\n\r\n                    {el.senderName === \"admin\" ? (\r\n                      <div\r\n                        style={{\r\n                          color: \"black\",\r\n                          fontSize: \"16px\",\r\n                          fontFamily: \"roboto\",\r\n                          fontWeight: \"400\",\r\n                          lineHeight: \"1.5\",\r\n                          wordWrap: \"break-word\",\r\n                          //wordBreak: \"break-all\",\r\n                        }}\r\n                      >\r\n                        {el.message}\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"18px\",\r\n                          fontFamily: \"roboto\",\r\n                          fontWeight: \"400\",\r\n                          lineHeight: \"1.5\",\r\n                          wordWrap: \"break-word\",\r\n                          //wordBreak: \"break-all\",\r\n                        }}\r\n                      >\r\n                        {el.message}\r\n                      </div>\r\n                    )}\r\n\r\n                    {el.senderName === \"admin\" ? null : (\r\n                      <div\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"end\",\r\n                          fontSize: \"16px\",\r\n                          fontFamily: \"roboto\",\r\n                          fontWeight: \"400\",\r\n                          lineHeight: \"1.43\",\r\n                        }}\r\n                      >\r\n                        {moment(el.createdAt).format(\"h:mm a\")}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n\r\n          <Fab\r\n            className={\r\n              this.state.showFab ? classes.fabVisible : classes.fabHidden\r\n            }\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.scrollToBottom();\r\n              this.setState({ showFab: false, unreadCount: 0 });\r\n              sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n            }}\r\n          >\r\n            <Badge badgeContent={this.state.unreadCount} color=\"secondary\">\r\n              <ExpandMoreRoundedIcon />\r\n            </Badge>\r\n          </Fab>\r\n        </Paper>\r\n\r\n        <form\r\n          style={{\r\n            height: \"10%\",\r\n            minWidth: \"300px\",\r\n            textAlign: \"center\",\r\n            maxWidth: \"720px\",\r\n          }}\r\n        >\r\n          <TextField\r\n            className={classes.inputRoot}\r\n            InputProps={{\r\n              className: classes.inputInput,\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            required\r\n            id=\"msg\"\r\n            label=\"Type your message\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{ width: \"70%\" }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            id=\"send\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginLeft: \"20px\",\r\n              marginBottom: \"20px\",\r\n              verticalAlign: \"bottom\",\r\n              backgroundColor: \"#298c18\",\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              let msgObject = {\r\n                message: document.getElementById(\"msg\").value,\r\n                senderName: this.state.userName,\r\n                status: \"sentFromClient\",\r\n                sentFromClientAt: new Date().getTime(),\r\n              };\r\n              document.getElementById(\"msg\").value = \"\";\r\n\r\n              this.props.socket.emit(\r\n                \"clientToServerMessage\",\r\n                msgObject,\r\n                (text) => {\r\n                  console.log(text);\r\n                }\r\n              );\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Chat);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Paper, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0px auto\",\r\n    boxShadow: \"none\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    backgroundColor: \"#5A5890\",\r\n    textAlign: \"center\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nclass Join extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Paper className={classes.rootCont}>\r\n          <Typography\r\n            style={{ fontSize: \"40px\", fontFamily: \"cursive\", color: \"#fff\" }}\r\n          >\r\n            Welcome to Manav's Chat Application\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            style={{ fontSize: \"20px\", fontFamily: \"cursive\", color: \"#fff\" }}\r\n          >\r\n            Please enter details to join/create a chat room\r\n          </Typography>\r\n\r\n          <br />\r\n          <br />\r\n          <form stye={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              varient=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Type your name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"roomName\"\r\n              label=\"Type the room name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button\r\n              style={{ backgroundColor: \"#298c18\" }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                let userName = document.getElementById(\"name\").value;\r\n                let roomName = document.getElementById(\"roomName\").value;\r\n                document.getElementById(\"name\").value = \"\";\r\n                document.getElementById(\"roomName\").value = \"\";\r\n                userName = userName.trim();\r\n                roomName = roomName.trim();\r\n                if (!userName || !roomName) {\r\n                  return alert(\"Username and room are required\");\r\n                }\r\n                userName = userName.trim();\r\n                roomName = roomName.trim();\r\n\r\n                if (!userName || !roomName) {\r\n                  return alert(\"Username and room are required\"); \r\n                }\r\n                if (userName === \"admin\") return alert(\"Username not valid\");\r\n\r\n                this.props.socket.emit(\r\n                  \"join\",\r\n                  { userName, roomName },\r\n                  (error) => {\r\n                    console.log(error)\r\n                    if(typeof(error)===\"object\"){\r\n                      this.props.history.push({\r\n                        pathname: \"/chat\",\r\n                        state: {\r\n                          userName: userName,\r\n                          roomName: roomName,\r\n                          msg:error\r\n                        },\r\n                      });\r\n                    }\r\n                    else{\r\n                      alert(error);\r\n                    }\r\n                  }\r\n                );\r\n              }}\r\n            >\r\n              Enter Room\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Join);\r\n","import React from 'react';\r\nimport Chat from './Components/chat'\r\nimport Join from './Components/join'\r\nimport { BrowserRouter, Route, Redirect,Switch} from \"react-router-dom\";\r\nimport io from 'socket.io-client'\r\n// const socket = io(\"http://192.168.29.238:5000/\");\r\n// const socket = io(\"http://localhost:5000\")\r\nconst socket = io(\"https://chatapp-backend-mg.herokuapp.com/\")\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    {console.log(window.location.href)}\r\n    <Switch>\r\n    <Route exact path='/join' render={props=><Join {...props} socket={socket}/>}/>\r\n    <Route exact path='/chat' render={props => <Chat {...props} socket={socket}/>}/>\r\n    <Redirect from='/' to='/join'/>\r\n\r\n    \r\n    </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n \r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}