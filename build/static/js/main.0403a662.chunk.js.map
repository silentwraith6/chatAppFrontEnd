{"version":3,"sources":["Components/chat.js","Components/join.js","App.js","serviceWorker.js","index.js"],"names":["Chat","props","addMessage","msgObject","setState","messages","state","userJoinTemp","location","userName","roomName","userJoined","socket","emit","error","this","on","console","log","document","getElementById","scrollIntoView","behavior","classes","theme","Paper","className","rootCont","Card","style","height","backgroundColor","Typography","color","fontSize","fontFamily","marginLeft","display","alignItems","msgDisplay","List","bottom","map","el","ListItem","sentBy","ownMessage","adminMessage","otherMessage","maxWidth","fontWeight","lineHeight","wordWrap","text","textAlign","moment","createdAt","format","clear","id","minWidth","TextField","inputRoot","InputProps","inputInput","margin","variant","required","label","autoFocus","width","Button","type","marginBottom","verticalAlign","onClick","e","preventDefault","message","value","senderName","alert","to","Component","withStyles","boxShadow","overflowY","position","marginRight","borderRadius","right","float","borderTopRightRadius","borderTopLeftRadius","padding","opacity","withTheme","Join","stye","marginTop","varient","fullWidth","history","push","pathname","paddingTop","paddingBottom","io","App","exact","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0403a662.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0px auto\",\r\n    boxShadow: \"none\",\r\n\tbackgroundColor: \"#5A5890\",\r\n\theight:\"100%\"\r\n  },\r\n  msgDisplay: {\r\n    minWidth: \"300px\",\r\n    height: \"77%\",\r\n    margin: \"0 auto\",\r\n    overflowY: \"scroll\",\r\n    \"&:hover\": {\r\n      overflowY: \"scroll\",\r\n    },\r\n\tposition: \"relative\",\r\n\tbackgroundColor:\"#ebebfc\"\r\n  },\r\n  ownMessage: {\r\n    marginRight: \"12px\",\r\n    backgroundColor: \"#514f82\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    right: \"0\",\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    borderTopRightRadius: \"0px\",\r\n  },\r\n  otherMessage: {\r\n    marginLeft: \"12px\",\r\n    backgroundColor: \"#5511a8\",\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    borderTopLeftRadius: \"0px\",\r\n  },\r\n  adminMessage: {\r\n    width: \"fit-content\",\r\n    maxWidth: \"275px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#8684b5\",\r\n    margin: \"5px auto\",\r\n\tpadding: \"0px 6px\",\r\n\topacity:\"0.8\",\r\n    borderRadius: \"8px\",\r\n    clear: \"both\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let userJoinTemp = false;\r\n    if (\r\n      this.props.location.state &&\r\n      this.props.location.state.userName &&\r\n      this.props.location.state.roomName\r\n    ) {\r\n      userJoinTemp = true;\r\n    }\r\n\r\n    this.state = {\r\n      userName: userJoinTemp ? this.props.location.state.userName : \"\",\r\n      messages: [],\r\n      roomName: userJoinTemp ? this.props.location.state.roomName : \"\",\r\n      userJoined: userJoinTemp,\r\n    };\r\n    this.props.socket.emit(\r\n      \"join\",\r\n      { userName: this.state.userName, roomName: this.state.roomName },\r\n      (error) => {\r\n        if (error) return;\r\n      }\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.props.socket.on(\"message\", (msgObject) => {\r\n      console.log(msgObject);\r\n      this.addMessage(msgObject);\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    document\r\n      .getElementById(\"dummyBottom\")\r\n      .scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  addMessage = (msgObject) => {\r\n    this.setState({\r\n      messages: [...this.state.messages, msgObject],\r\n    });\r\n  };\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    let displayList;\r\n    if (!this.state.userJoined) {\r\n      return (\r\n        <div>\r\n          {alert(\"You need to join a room first\")}\r\n          <Redirect to=\"/join\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Paper className={classes.rootCont}>\r\n        <Card style={{ height: \"11%\", backgroundColor: \"#5A5890\" }}>\r\n          <Typography\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"22px\",\r\n              fontFamily: \"cursive\",\r\n\t\t\t  marginLeft: \"10px\",\r\n\t\t\t  display:\"flex\",\r\n\t\t\t  height:\"100%\",\r\n\t\t\t  alignItems:\"center\"\r\n            }}\r\n          >\r\n            Room Name : {this.state.roomName}<br/>\r\n\t\t\tParticipant Name : {this.state.userName}\r\n          </Typography>\r\n        </Card>\r\n        <Paper className={classes.msgDisplay} style={{}}>\r\n         \r\n          <List\r\n            style={{\r\n              bottom: \"0\",\r\n            }}\r\n          >\r\n            {this.state.messages.map((el) => (\r\n              <ListItem\r\n                className={\r\n                  el.sentBy === this.state.userName\r\n                    ? classes.ownMessage\r\n                    : el.sentBy === \"admin\"\r\n                    ? classes.adminMessage\r\n                    : classes.otherMessage\r\n                }\r\n              >\r\n                <div style={{ maxWidth: \"243px\" }}>\r\n                  {el.sentBy !== this.state.userName &&\r\n                  el.sentBy !== \"admin\" ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"orange\",\r\n                        fontSize: \"15px\",\r\n                      }}\r\n                    >\r\n                      {el.sentBy}\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {el.sentBy === \"admin\" ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"16px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.5\",\r\n                        wordWrap: \"break-word\",\r\n                        //wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {el.text}\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: \"18px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.5\",\r\n                        wordWrap: \"break-word\",\r\n                        //wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {el.text}\r\n                    </div>\r\n                  )}\r\n\r\n                  {el.sentBy === \"admin\" ? null : (\r\n                    <div\r\n                      style={{\r\n                        color: \"white\",\r\n                        textAlign: \"end\",\r\n                        fontSize: \"16px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.43\",\r\n                      }}\r\n                    >\r\n                      {moment(el.createdAt).format(\"h:mm a\")}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <div style={{ clear: \"both\" }} id=\"dummyBottom\" />\r\n        </Paper>\r\n\r\n        <form\r\n          style={{ height:\"10%\",minWidth: \"300px\", textAlign: \"center\", maxWidth: \"720px\" }}\r\n        >\r\n          <TextField\r\n            className={classes.inputRoot}\r\n            InputProps={{\r\n              className: classes.inputInput,\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            required\r\n            id=\"msg\"\r\n            label=\"Type your message\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{width:\"70%\"}}\r\n          />\r\n          <Button\r\n\t\t  type=\"submit\"\r\n            id=\"send\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginLeft: \"20px\",\r\n              marginBottom: \"20px\",\r\n\t\t\t  verticalAlign: \"bottom\",\r\n\t\t\t  backgroundColor:'#298c18'\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              let msgObject = {\r\n                message: document.getElementById(\"msg\").value,\r\n                senderName: this.state.userName,\r\n              };\r\n              document.getElementById(\"msg\").value = \"\";\r\n\r\n              this.props.socket.emit(\"message\", msgObject, () => {\r\n                console.log(\"Delivered\");\r\n              });\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Chat);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Paper, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0px auto\",\r\n    boxShadow: \"none\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    backgroundColor: \"#5A5890\",\r\n    textAlign: \"center\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nclass Join extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Paper className={classes.rootCont}>\r\n          <Typography\r\n            style={{ fontSize: \"40px\", fontFamily: \"cursive\", color: \"#fff\" }}\r\n          >\r\n            Welcome to Manav's Chat Application\r\n            \r\n          </Typography >\r\n          <br/>\r\n          <Typography style={{ fontSize: \"20px\", fontFamily: \"cursive\", color: \"#fff\" }}>Please enter details to join/create a chat room</Typography>\r\n\r\n          <br />\r\n          <br />\r\n          <form stye={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              varient=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Type your name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"roomName\"\r\n              label=\"Type the room name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button\r\n              style={{ backgroundColor: \"#298c18\" }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                let userName = document.getElementById(\"name\").value;\r\n                let roomName = document.getElementById(\"roomName\").value;\r\n\r\n                this.props.socket.emit(\r\n                  \"join\",\r\n                  { userName, roomName },\r\n                  (error) => {\r\n                    if (error) return alert(error);\r\n                    this.props.history.push({\r\n                      pathname: \"/chat\",\r\n                      state: {\r\n                        userName: userName,\r\n                        roomName: roomName,\r\n                      },\r\n                    });\r\n                  }\r\n                );\r\n              }}\r\n            >\r\n              Enter Room\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Join);\r\n","import React from 'react';\nimport Chat from './Components/chat'\nimport Join from './Components/join'\nimport { BrowserRouter, Route, Redirect} from \"react-router-dom\";\nimport io from 'socket.io-client'\nconst socket = io(\"https://chat-app-server-mg.herokuapp.com/\");\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Route exact path='/join' render={props=><Join {...props} socket={socket}/>}/>\n    <Route exact path='/chat' render={props => <Chat {...props} socket={socket}/>}/>\n    <Redirect to=\"join\"/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}