{"version":3,"sources":["Components/chat.js","Components/join.js","App.js","serviceWorker.js","index.js"],"names":["Chat","props","autoScrolling","newMessage","document","getElementById","lastElementChild","newMessageStyles","getComputedStyle","newMessageMargin","parseInt","marginBottom","newMessageHeight","offsetHeight","chat","visibleHeight","containerHeight","scrollHeight","scrollOffset","scrollTop","console","log","Math","floor","ceil","setState","showFab","addMessage","msgObject","messages","state","sessionStorage","setItem","JSON","stringify","userJoinTemp","location","userName","roomName","msg","getItem","parse","userJoined","status","socket","emit","error","this","on","callback","recOnClientAt","Date","getTime","window","addEventListener","length","id","missedMsgs","alert","map","reload","classes","theme","Paper","className","rootCont","Card","style","height","backgroundColor","Typography","color","fontSize","fontFamily","marginLeft","display","alignItems","msgDisplay","List","bottom","width","overflow","el","ListItem","senderName","ownMessage","adminMessage","otherMessage","maxWidth","fontWeight","lineHeight","wordWrap","message","textAlign","moment","createdAt","format","Fab","fabVisible","fabHidden","size","minWidth","TextField","inputRoot","InputProps","inputInput","margin","variant","required","label","autoFocus","Button","type","verticalAlign","onClick","e","preventDefault","value","sentFromClientAt","text","to","Component","withStyles","boxShadow","overflowY","position","marginRight","borderRadius","right","float","clear","borderTopRightRadius","borderTopLeftRadius","padding","opacity","withTheme","Join","stye","marginTop","varient","fullWidth","trim","history","push","pathname","paddingTop","paddingBottom","io","App","href","exact","path","render","from","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","URL","process","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b6f4e2a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Card,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport ExpandMoreRoundedIcon from \"@material-ui/icons/ExpandMoreRounded\";\r\n\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0 auto\",\r\n    boxShadow: \"none\",\r\n    backgroundColor: \"#5A5890\",\r\n    height: \"100%\",\r\n  },\r\n  msgDisplay: {\r\n    minWidth: \"300px\",\r\n    height: \"77%\",\r\n    margin: \"0 auto\",\r\n    overflowY: \"hidden\",\r\n    // \"&:hover\": {\r\n    //   overflowY: \"scroll\",\r\n    // },\r\n    position: \"relative\",\r\n    backgroundColor: \"#ebebfc\",\r\n  },\r\n  ownMessage: {\r\n    marginRight: \"12px\",\r\n    backgroundColor: \"#514f82\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    right: \"0\",\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    borderTopRightRadius: \"0px\",\r\n  },\r\n  otherMessage: {\r\n    marginLeft: \"12px\",\r\n    backgroundColor: \"#5511a8\",\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    marginBottom: \"5px\",\r\n    borderRadius: \"16px\",\r\n    maxWidth: \"275px\",\r\n    width: \"fit-content\",\r\n    borderTopLeftRadius: \"0px\",\r\n  },\r\n  adminMessage: {\r\n    width: \"fit-content\",\r\n    maxWidth: \"275px\",\r\n    marginBottom: \"5px\",\r\n    backgroundColor: \"#8684b5\",\r\n    margin: \"5px auto\",\r\n    padding: \"0px 6px\",\r\n    opacity: \"0.8\",\r\n    borderRadius: \"8px\",\r\n    clear: \"both\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n  fabVisible: {\r\n    backgroundColor: \"#8684b5\",\r\n    opacity: \"0.8\",\r\n    bottom:\"20px\",\r\n    right:\"60px\",\r\n    position:\"absolute\"\r\n  },\r\n  fabHidden: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let userJoinTemp = false;\r\n    if (\r\n      this.props.location.state &&\r\n      this.props.location.state.userName &&\r\n      this.props.location.state.roomName &&\r\n      this.props.location.state.msg\r\n    ) {\r\n      userJoinTemp = true;\r\n    }\r\n\r\n    this.state = sessionStorage.getItem(\"state\")\r\n      ? JSON.parse(sessionStorage.getItem(\"state\"))\r\n      : {\r\n          userName: userJoinTemp ? this.props.location.state.userName : \"\",\r\n          messages: userJoinTemp ? [this.props.location.state.msg] : [],\r\n          roomName: userJoinTemp ? this.props.location.state.roomName : \"\",\r\n          userJoined: userJoinTemp,\r\n          status: null,\r\n          showFab: false,\r\n        };\r\n    this.props.socket.emit(\r\n      \"join\",\r\n      { userName: this.state.userName, roomName: this.state.roomName },\r\n      (error) => {\r\n        if (error) return;\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const chat = document.getElementById(\"chatList\");\r\n    // chat.scrollTop = chat.scrollHeight;\r\n\r\n    this.props.socket.on(\"serverToClientMessage\", (msgObject, callback) => {\r\n      msgObject.recOnClientAt = new Date().getTime();\r\n      msgObject.status = \"recOnClient\";\r\n      this.addMessage(msgObject);\r\n    });\r\n\r\n    window.addEventListener(\"offline\", () => {\r\n      this.setState({ status: \"disconnected\" });\r\n    });\r\n    window.addEventListener(\"online\", () => {\r\n      this.setState({ status: \"connected\" });\r\n      this.props.socket.emit(\r\n        \"updateMessages\",\r\n        this.state.messages[this.state.messages.length - 1].id,\r\n        this.state.roomName,\r\n        (missedMsgs) => {\r\n          alert(\"missed \" + missedMsgs.length);\r\n          missedMsgs.map((msgObject) => {\r\n            this.addMessage(msgObject);\r\n          });\r\n          window.location.reload(false);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  autoScrolling = () => {\r\n    const newMessage = document.getElementById(\"msgList\").lastElementChild;\r\n\r\n    const newMessageStyles = getComputedStyle(newMessage);\r\n    const newMessageMargin = parseInt(newMessageStyles.marginBottom);\r\n    const newMessageHeight = newMessage.offsetHeight + newMessageMargin;\r\n\r\n    const chat = document.getElementById(\"chatList\");\r\n    const visibleHeight = chat.offsetHeight;\r\n\r\n    const containerHeight = chat.scrollHeight;\r\n\r\n    const scrollOffset = chat.scrollTop + visibleHeight;\r\n\r\n    console.log(\r\n      \"container Height =\",\r\n      containerHeight,\r\n      \"\\nnew message Height =\",\r\n      newMessageHeight,\r\n      \"\\nscrollOffset =\",\r\n      scrollOffset\r\n    );\r\n\r\n    if (\r\n      Math.floor(containerHeight - newMessageHeight - 2) <=\r\n      Math.ceil(scrollOffset)\r\n    ) {\r\n      chat.scrollTop = chat.scrollHeight + newMessageMargin;\r\n    } else {\r\n      this.setState({\r\n        showFab: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  addMessage = (msgObject) => {\r\n    this.setState({\r\n      messages: [...this.state.messages, msgObject],\r\n    });\r\n    sessionStorage.setItem(\"state\", JSON.stringify(this.state));\r\n    this.autoScrolling();\r\n  };\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    let displayList;\r\n    if (!this.state.userJoined) {\r\n      return (\r\n        <div>\r\n          {alert(\"You need to join a room first\")}\r\n          <Redirect to=\"/join\" />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Paper className={classes.rootCont}>\r\n        <Card style={{ height: \"11%\", backgroundColor: \"#5A5890\" }}>\r\n          <Typography\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"22px\",\r\n              fontFamily: \"cursive\",\r\n              marginLeft: \"10px\",\r\n              display: \"flex\",\r\n              height: \"100%\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            Room Name : {this.state.roomName}\r\n            <br />\r\n            Participant Name : {this.state.userName}\r\n          </Typography>\r\n        </Card>\r\n        <Paper id=\"chatList\" className={classes.msgDisplay} style={{}}>\r\n          {/* <div> */}\r\n          <List\r\n            id=\"msgList\"\r\n            style={{\r\n              bottom: \"0\",\r\n              width:\"100%\",\r\n              height:\"100%\",\r\n              overflow:\"auto\"\r\n            }}\r\n          >\r\n            {this.state.messages.map((el) => (\r\n              <ListItem\r\n                className={\r\n                  el.senderName === this.state.userName\r\n                    ? classes.ownMessage\r\n                    : el.senderName === \"admin\"\r\n                    ? classes.adminMessage\r\n                    : classes.otherMessage\r\n                }\r\n              >\r\n                <div style={{ maxWidth: \"243px\" }}>\r\n                  {el.senderName !== this.state.userName &&\r\n                  el.senderName !== \"admin\" ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"orange\",\r\n                        fontSize: \"15px\",\r\n                      }}\r\n                    >\r\n                      {el.senderName}\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {el.senderName === \"admin\" ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"black\",\r\n                        fontSize: \"16px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.5\",\r\n                        wordWrap: \"break-word\",\r\n                        //wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {el.message}\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: \"18px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.5\",\r\n                        wordWrap: \"break-word\",\r\n                        //wordBreak: \"break-all\",\r\n                      }}\r\n                    >\r\n                      {el.message}\r\n                    </div>\r\n                  )}\r\n\r\n                  {el.senderName === \"admin\" ? null : (\r\n                    <div\r\n                      style={{\r\n                        color: \"white\",\r\n                        textAlign: \"end\",\r\n                        fontSize: \"16px\",\r\n                        fontFamily: \"roboto\",\r\n                        fontWeight: \"400\",\r\n                        lineHeight: \"1.43\",\r\n                      }}\r\n                    >\r\n                      {moment(el.createdAt).format(\"h:mm a\")}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          {/* </div> */}\r\n        \r\n          <Fab\r\n            className={\r\n              this.state.showFab ? classes.fabVisible : classes.fabHidden\r\n            }\r\n            size=\"small\"\r\n          >\r\n            <ExpandMoreRoundedIcon />\r\n          </Fab>\r\n        \r\n        </Paper>\r\n\r\n        <form\r\n          style={{\r\n            height: \"10%\",\r\n            minWidth: \"300px\",\r\n            textAlign: \"center\",\r\n            maxWidth: \"720px\",\r\n          }}\r\n        >\r\n          <TextField\r\n            className={classes.inputRoot}\r\n            InputProps={{\r\n              className: classes.inputInput,\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            required\r\n            id=\"msg\"\r\n            label=\"Type your message\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            style={{ width: \"70%\" }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            id=\"send\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginLeft: \"20px\",\r\n              marginBottom: \"20px\",\r\n              verticalAlign: \"bottom\",\r\n              backgroundColor: \"#298c18\",\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              let msgObject = {\r\n                message: document.getElementById(\"msg\").value,\r\n                senderName: this.state.userName,\r\n                status: \"sentFromClient\",\r\n                sentFromClientAt: new Date().getTime(),\r\n              };\r\n              document.getElementById(\"msg\").value = \"\";\r\n\r\n              this.props.socket.emit(\r\n                \"clientToServerMessage\",\r\n                msgObject,\r\n                (text) => {\r\n                  console.log(text);\r\n                }\r\n              );\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Chat);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Paper, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nconst styles = (theme) => ({\r\n  rootCont: {\r\n    maxWidth: \"720px\",\r\n    margin: \"0px auto\",\r\n    boxShadow: \"none\",\r\n    paddingTop: \"20px\",\r\n    paddingBottom: \"20px\",\r\n    backgroundColor: \"#5A5890\",\r\n    textAlign: \"center\",\r\n  },\r\n  inputRoot: {\r\n    backgroundColor: \"#d4d3f0\",\r\n  },\r\n  inputInput: {\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nclass Join extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Paper className={classes.rootCont}>\r\n          <Typography\r\n            style={{ fontSize: \"40px\", fontFamily: \"cursive\", color: \"#fff\" }}\r\n          >\r\n            Welcome to Manav's Chat Application\r\n          </Typography>\r\n          <br />\r\n          <Typography\r\n            style={{ fontSize: \"20px\", fontFamily: \"cursive\", color: \"#fff\" }}\r\n          >\r\n            Please enter details to join/create a chat room\r\n          </Typography>\r\n\r\n          <br />\r\n          <br />\r\n          <form stye={{ marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              varient=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Type your name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              className={classes.inputRoot}\r\n              InputProps={{\r\n                className: classes.inputInput,\r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"roomName\"\r\n              label=\"Type the room name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              style={{ maxWidth: \"300px\" }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button\r\n              style={{ backgroundColor: \"#298c18\" }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                let userName = document.getElementById(\"name\").value;\r\n                let roomName = document.getElementById(\"roomName\").value;\r\n                document.getElementById(\"name\").value = \"\";\r\n                document.getElementById(\"roomName\").value = \"\";\r\n                userName = userName.trim();\r\n                roomName = roomName.trim();\r\n                if (!userName || !roomName) {\r\n                  return alert(\"Username and room are required\");\r\n                }\r\n                userName = userName.trim();\r\n                roomName = roomName.trim();\r\n\r\n                if (!userName || !roomName) {\r\n                  return alert(\"Username and room are required\"); \r\n                }\r\n                if (userName === \"admin\") return alert(\"Username not valid\");\r\n\r\n                this.props.socket.emit(\r\n                  \"join\",\r\n                  { userName, roomName },\r\n                  (error) => {\r\n                    console.log(error)\r\n                    if(typeof(error)===\"object\"){\r\n                      this.props.history.push({\r\n                        pathname: \"/chat\",\r\n                        state: {\r\n                          userName: userName,\r\n                          roomName: roomName,\r\n                          msg:error\r\n                        },\r\n                      });\r\n                    }\r\n                    else{\r\n                      alert(error);\r\n                    }\r\n                  }\r\n                );\r\n              }}\r\n            >\r\n              Enter Room\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Join);\r\n","import React from 'react';\nimport Chat from './Components/chat'\nimport Join from './Components/join'\nimport { BrowserRouter, Route, Redirect,Switch} from \"react-router-dom\";\nimport io from 'socket.io-client'\nconst socket = io(\"https://chat-app-server-mg.herokuapp.com/\");\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    {console.log(window.location.href)}\n    <Switch>\n    <Route exact path='/join' render={props=><Join {...props} socket={socket}/>}/>\n    <Route exact path='/chat' render={props => <Chat {...props} socket={socket}/>}/>\n    <Redirect from='/' to='/join'/>\n\n    \n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}